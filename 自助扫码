# array-study
/*扫码支付如今已普及应用在大型超市，街边小贩等多个消费支付的场景，刷脸支付也在商超零售场景逐渐应用，很多的大型超市引进自助收银系统，实现自助结账应用。

已知某超市有自助收银机m台，每件商品扫码时间都相等，均为1秒，现有n个顾客准备结账，初始顺序已经确定为1-n，编号i号顾客购买的商品件数为ci，当其中某名顾客扫完所有商品后，下一名排队等候付款的顾客马上使用刚空闲的这台自助收银机，即忽略支付时间和自助收银机换人的时间开销，则所有顾客完成结账需要多少时间？

输入格式:
输入第一行为两个正整数n和m(1 ≤ n ≤ 10000，1 ≤m≤ 20)，中间用一个空格隔开，分别表示待结账顾客人数和自助收银机台数。 第二行n个整数c1、c2、…、cn(1 ≤ci≤ 100)，每两个整数之间用一个空格隔开，ci表示i号顾客购买的商品件数。

输出格式:
输出只有一个正整数，即所有顾客完成结账的总时间。*/

#include<stdio.h>
#include<string.h>
#include<stdlib.h>

int main()
{
	int mach = 0;
	int user = 0;
	int userteam[10002] = { 0 };
	int machsum[22] = { 0 };
	scanf("%d %d", &user, &mach);
	for (int i = 1; i <= user; i++)
	{
		scanf("%d", &userteam[i]);
	}
	int all = 1; 
	int time = 0;
	while(1)
	{
		for (int j = 1; j <= mach; j++)
		{
			if (machsum[j] == 0)
			{
				if(all<=user)
				machsum[j] = userteam[all];
					all++;
			}
		}
		for (int j = 1; j <= mach; j++)
		{
			if(machsum[j]>0)
			machsum[j]--;
		}
		time++;
		int end = 0;
		for (int n = 1; n <= mach; n++)
		{
			if(machsum[n] ==0)
			end++;
		}
		if (end == mach && all > user)
			break;
	}
	printf("%d", time);
	return 0;
}
